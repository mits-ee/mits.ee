<h1>CMS</h1>
<div style="display: flex; flex-direction: row;">
    <div>
        <button class="pill active" id="html">HTML</button>
        <button class="pill" id="css">CSS</button>
        <div class="tab active" id="htmlTab" style="margin: 1rem;">
          <p>Sisesta uus HTML sektsioonile <b>{{ cmsField.key }}</b>.</p>
          <div id="html-editor" style="width: 800px; height: 700px; border: 1px solid black;"></div>
        </div>
        <div class="tab active" id="cssTab" style="margin: 1rem;">
          <p>Kui tahad lisada sektsioonile SCSS-i, lisa see siia.</p>
          <div id="css-editor" style="width: 800px; height: 700px; border: 1px solid black;"></div>
        </div>

        <form id="cms-field-form" action="/admin/cms/update-field/{{ cmsField.id }}/" method="post" style="display: block">
          <textarea name="newValue" style="display: none;"></textarea>
          <textarea name="newValueCss" style="display: none;"></textarea>
          <button id="save-button" type="submit">Salvesta</button>
        </form>
    </div>
    <div style="display: flex; flex-direction: column; width: 100%;">
        <form id="cms-test-form" action="/testenv?section={{ section }}&field={{ cmsField.key }}" method="post" style="display: block" target='testenv'>
            <textarea name="newTest" style="display: none;"></textarea>
            <textarea name="newTestCss" style="display: none;"></textarea>
            <button id="test-button" type="submit">Uuenda</button>
        </form>
        <iframe name="testenv" src="/testenv?section={{ section }}&field={{ cmsField.key }}" style="height: 100%; margin: 1rem;"></iframe>
    </div>
</div>

<style>
  .pill {
    padding: 10px;
    border-radius: 4px;
    background-color:#ffffff;
    color:#000000;
    outline: none !important;
  }

  .pill.active {
    border:2px solid #4b98c2;
    box-shadow: 0px 0px 8px 0px #3892c2;
  }

  .tab {
    display: none;
  }

  .tab.active {
    display: block;
  }
</style>

<script>
    var require = { paths: { vs: '/monaco-editor/vs' } };
</script>
<script src="/beautify-html.min.js"></script>
<script src="/beautify-css.min.js"></script>

<script src="/monaco-editor/vs/loader.js"></script>
<script src="/monaco-editor/vs//editor/editor.main.nls.js"></script>
<script src="/monaco-editor/vs/editor/editor.main.js"></script>

<script>
    
    var el = document.createElement('span');
    el.innerHTML = `{{cmsField.value}}`;

    var htmlEditor = monaco.editor.create(document.getElementById('html-editor'), {
        value: html_beautify(el.innerText.trim()),
        language: 'html',
      });

    var cssEditor;

    async function init() {
      cssEditor = monaco.editor.create(document.getElementById('css-editor'), {
          value: css_beautify(`{{cmsField.css}}`.trim()),
          language: 'scss',
      });
    };

    init().then(() => {
      document.querySelector('#cssTab').className = 'tab';
    });

    submitTest();

    document.getElementById('cms-field-form').onsubmit = (e) => {
      e.stopPropagation();
      e.preventDefault();
      document.getElementsByName('newValue')[0].value = htmlEditor.getValue();
      document.getElementsByName('newValueCss')[0].value = cssEditor.getValue();

      document.getElementById('cms-field-form').submit();
    }

    document.getElementById('cms-test-form').onsubmit = (e) => {
      e.stopPropagation();
      e.preventDefault();
      submitTest();
    }

    function submitTest() {
      document.getElementsByName('newTest')[0].value = htmlEditor.getValue();
      document.getElementsByName('newTestCss')[0].value = cssEditor.getValue();
      document.getElementById('cms-test-form').submit();
    }

  const htmlButton = document.querySelector('#html');
  const cssButton = document.querySelector('#css');
  const tabs = document.querySelectorAll('.tab');
  let firstRun = true;

  htmlButton.onclick = () => {
    if (!htmlButton.classList.contains('active')) {
      htmlButton.classList.toggle('active');
      cssButton.classList.toggle('active');
      tabs.forEach((el) => {
        el.classList.toggle('active')
      });
    }
  };

  cssButton.onclick = () => {
    if (!cssButton.classList.contains('active') && firstRun) {
      htmlButton.classList.toggle('active');
      cssButton.classList.toggle('active');
      tabs.forEach((el) => {
        el.classList.toggle('active')
      });
    } else if (document.querySelector('#cssTab').classList.contains('hidden')) {
      htmlButton.classList.toggle('active');
      cssButton.classList.toggle('active');
      document.querySelector('#htmlTab').classList.toggle('active');
      document.querySelector('#cssTab').className = 'tab active';
      firstRun = false;
    }
  };

</script>
